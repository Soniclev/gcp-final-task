apiVersion: v1
kind: Pod
metadata:
  name: gcp-final-task
  labels:
    app: gcp-final-task
spec:
  containers:
    - name: gcp-final-task
      image: europe-central2-docker.pkg.dev/trusty-acre-367607/gcp-final-task/gcp:6b4581a
      ports:
        - name: http
          containerPort: 8000
      env:
        - name: DATABASE
          valueFrom:
            secretKeyRef:
              name: db-proxy-connect
              key: db
      resources:
        limits:
          cpu: 0.1
          memory: "100Mi"

    - name: cloud-sql-proxy
      image: gcr.io/cloudsql-docker/gce-proxy:1.28.0 # make sure the use the latest version
      command:
        - "/cloud_sql_proxy"

        # If connecting from a VPC-native GKE cluster, you can use the
        # following flag to have the proxy connect over private IP
        - "-ip_address_types=PRIVATE"

        # By default, the proxy will write all logs to stderr. In some
        # environments, anything printed to stderr is consider an error. To
        # disable this behavior and write all logs to stdout (except errors
        # which will still go to stderr), use:
        - "-log_debug_stdout"

        # Replace DB_PORT with the port the proxy should listen on
        # Defaults: MySQL: 3306, Postgres: 5432, SQLServer: 1433
        - "-instances=trusty-acre-367607:europe-central2:gcp-db=tcp:5432"

        - "-credential_file=/secrets/service_account.json"
      securityContext:
        # The default Cloud SQL proxy image runs as the
        # "nonroot" user and group (uid: 65532) by default.
        runAsNonRoot: true
      volumeMounts:
        - name: cred-volume
          mountPath: /secrets/
          readOnly: true
      # You should use resource requests/limits as a best practice to prevent
      # pods from consuming too many resources and affecting the execution of
      # other pods. You should adjust the following values based on what your
      # application needs. For details, see
      # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
      resources:
        requests:
          # The proxy's memory use scales linearly with the number of active
          # connections. Fewer open connections will use less memory. Adjust
          # this value based on your application's requirements.
          memory: "500Mi"
          # The proxy's CPU use scales linearly with the amount of IO between
          # the database and the application. Adjust this value based on your
          # application's requirements.
          cpu: "0.1"
  volumes:
    - name: cred-volume
      secret:
        secretName: db-proxy-sa

